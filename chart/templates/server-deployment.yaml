apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serverDeployment.name }}
  labels:
    app: {{ .Values.serverDeployment.name }}
spec:
  replicas: {{ .Values.serverDeployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.serverDeployment.name }}
  template:
    metadata:
      name: {{ .Values.serverDeployment.name }}
      labels:
        app: {{ .Values.serverDeployment.name }}
    spec:
      containers:
        - name: {{ .Values.serverDeployment.name }}
          image: {{ .Values.serverDeployment.image }}
          imagePullPolicy: {{ .Values.serverDeployment.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.serverDeployment.port }}
              protocol: TCP
          env:
            - name: DB_HOST
              value: "{{ .Values.mysql.service }}.{{ .Release.Namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: "{{ .Values.mysql.port }}"
            - name: DB_USER
              value: "{{ .Values.mysql.user }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mysql.name }}
                  key: {{ .Values.secrets.mysql.key }}
            - name: DB_DATABASE
              value: "{{ .Values.mysql.database }}"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            failureThreshold: 30
            periodSeconds: 5
      imagePullSecrets: {{ toYaml .Values.images.pullSecrets | nindent 8 }}
      restartPolicy: {{ .Values.serverDeployment.restartPolicy }}
